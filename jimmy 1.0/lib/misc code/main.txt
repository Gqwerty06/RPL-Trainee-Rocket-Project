//nrf TX Code
#include <Arduino.h>
#include <RF24.h>
#include <nRF24L01.h>
#include <SPI.h>
#include <stdarg.h>
#include <MPU6050.h>
#include <I2Cdev.h>
#include <Wire.h>

RF24 radio; // CE, CSN
MPU6050 mpu; // Set up IMU

//Uninitialized pointers to null SPI Items
SPIClass *vspi = NULL;
SPIClass *hspi = NULL;

//declare gyrovars


const byte addy[][6] = {"00001","00002"};
const uint8_t chan = 105;

struct data
{
  int16_t ax, ay, az, gx, gy, gz;
};
data dat1, dat2;

void sendData();
void recData();
void readIMU();

void setup()
{
  radio.begin(27,15);
  radio.setPALevel(RF24_PA_MAX, 0);
  radio.setChannel(chan);
  Serial.begin(115200);
  Serial.println("Starting to send: ");
  radio.openWritingPipe(addy[0]);

  //IMU int.
  Wire.begin(21,22);
  mpu.initialize();

  //SPI Declarations
  vspi = new SPIClass(VSPI);
  hspi = new SPIClass(HSPI);
  vspi->begin();
  hspi->begin();
  
  //set up slave select pins as outputs, Arduino API doesn't handle automatically pulling SS low
  pinMode(vspi->pinSS(), OUTPUT);  //VSPI SS
  pinMode(hspi->pinSS(), OUTPUT);  //HSPI SS

}

String buff, buf;
void loop()
{
  readIMU();
  sendData();
  // recData();
  delay(75);
}

void readIMU()
{
  mpu.getMotion6(&dat1.ax, &dat1.ay, &dat1.az, &dat1.gx, &dat1.gy, &dat1.gz);
}

void sendData()
{
  radio.stopListening();
  buff = String(dat1.ax) + "\t" + String(dat1.ay) + "\t" + String(dat1.az) + "\t" + String(dat1.gx) + "\t" + String(dat1.gy)
    + "\t" + String(dat1.gz);
  Serial.println("Sending: ");
  Serial.println(buff);
  radio.write(&dat1, sizeof(data));
}

void recData()
{
//   radio.startListening();
//   if(radio.available())
//   {
//     radio.read(&dat2, sizeof(data));
//     buf = String(dat2.d1) + "\t" + String(dat2.d2) + "\t" + String(dat2.d3) + "\t" + String(dat2.d4) + "\t" + String(dat2.enc)
//           + "\t" + String(dat2.pt1) + "\t" + String(dat2.pt2) + "\t" + String(dat2.pt3) + "\t" + String(dat2.pt4) + "\t" + String(dat2.pt5);
//     Serial.println("Receiving: ");
//     Serial.println(buf);
//   }
}
